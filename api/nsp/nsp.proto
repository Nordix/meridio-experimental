/*
Copyright (c) 2021 Nordix Foundation

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package nsp;
option go_package = "github.com/nordix/meridio/api/nsp";
import "google/protobuf/empty.proto";

service NetworkServicePlateformService {
    rpc Register(Target) returns (google.protobuf.Empty) {}
    rpc Unregister(Target) returns (google.protobuf.Empty) {}
    rpc Monitor(TargetType) returns (stream TargetEvent) {}
    rpc GetTargets(TargetType) returns (GetTargetsResponse) {}
    rpc Update(Target) returns (google.protobuf.Empty) {}
}

message GetTargetsResponse {
    repeated Target targets = 1;
}

message Target {
    enum Status {
        Enabled = 0;
        Disabled = 1;
    }
    enum Type {
        DEFAULT = 0;
        FRONTEND = 1;
    }

    repeated string ips = 1;
    map<string, string> context = 3;
    Status status = 4;
    Type type = 2;
}

message TargetType {
    Target.Type type = 1;
}

message TargetEvent {
    enum Status {
        Register = 0;
        Unregister = 1;
        Updated = 2;
    }

    Target target = 1;
    Status status = 2;
}

